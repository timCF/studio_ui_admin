- var utils = locals.utils
- var state = locals.state
- var optionlg = "form-control input-lg text-center noborder"
mixin swapbutton(name, path, style)
	if state.data && state.data.enabled
		button.btn.btn-success(class=style onClick=utils.view_swap(state, path))= name
	else
		button.btn.btn-default(class=style onClick=utils.view_swap(state, path))= name
mixin selectitems(list, path, dict)
	- var currentval = utils.view_get(state, path)
	- var this_val = list.filter(function(el){return (el == currentval);})[0]
	- var placeholder = ((this_val == currentval) ? dict[this_val] : "ничего не выбрано")
	select.selectpicker.form-control(onChange=utils.view_set(state, path) data-live-search="true" title=placeholder)
		each el in list
			option(value=el)= dict[el]
mixin selectitems_multiple(list, path, dict)
	- var currentval = utils.view_get(state, path)
	- var this_val = (currentval ? currentval : []).map(function(el){return el.toString();})
	select.selectpicker.form-control(multiple onChange=utils.multiple_select(state, path) data-live-search="true" defaultValue=this_val)
		each el in list
			option(value=el)= dict[el]
mixin fileinput(path)
	div.btn.btn-default.btn-lg.btn-file.fill Browse or drag and drop files
		input(type="file" multiple="true" onChange=utils.view_files(state, path))
mixin auth
	div.center_abs.widthlim
		form
			input.form-control.fill.megaform(tabIndex="1" type="text" id="login" placeholder="логин" autoComplete="on" onChange=utils.view_set(state, ["request_template","login"]))
			input.form-control.fill.megaform(tabIndex="2" type="password" id="password" placeholder="пароль" autoComplete="off" onChange=utils.view_set(state, ["request_template","password"]))
			button.btn.btn-primary.fill.submitmegaform(type="submit" data-toggle="tooltip" data-placement="bottom" title="войти" onClick=utils.CMD_get_state())
				span.myicon(class="fa fa-sign-in" aria-hidden="true")
mixin select_room_location(room_id)
	if !room_id
		div.btn-group.ml.mt
			- var defval = "все базы"
			- var title = (state.ids.location ? state.response_state.locations.filter(function(el){return el.id.compare(state.ids.location) == 0;})[0].name : defval)
			select.selectpicker.form-control.input-lg(onChange=utils.set_location(state) title=title data-live-search="true")
				each el in state.response_state.locations.concat({id: "", name: defval})
					option(class=optionlg value=el.id)= el.name
		if state.ids.location
			- var rooms = state.response_state.rooms.filter(function(el){return el.location_id.compare(state.ids.location) == 0;})
			- var defval = "все комнаты"
			- var title = (state.ids.room ? rooms.filter(function(el){return el.id.compare(state.ids.room) == 0;})[0].name : defval)
			div.btn-group.ml.mt
				select.selectpicker.form-control.input-lg(onChange=utils.set_room(state, ["ids","room"]) title=title data-live-search="true")
					each el in rooms.concat({id: "", name: defval})
						option(class=optionlg value=el.id style=(el.color ? "backgroundColor:"+el.color : ""))= el.name
	else
		- var location_id = state.rooms_of_locations[room_id]
		- var rooms = state.response_state.rooms.filter(function(el){return el.location_id.compare(location_id) == 0;})
		- var title = rooms.filter(function(el){return el.id.compare(room_id) == 0;})[0].name
		select.selectpicker.form-control(onChange=utils.view_set(state, ["new_session","room_id"]) data-live-search="true" title=title)
			each el in rooms
				option(value=el.id style="backgroundColor:"+el.color)= el.name
mixin navbar()
	div.container-fluid
		div.row.text-center
			div.btn-group.ml.mt(key=state.rnd)
				each el in state.pages_list
					if (el.key != state.current_page)
						button.btn.btn-info.btn-lg(key=el.key+state.rnd data-toggle="tooltip" data-placement="bottom" title=el.tt onClick=utils.view_put_render(state, ["current_page"], el.key))
							span.myicon(class="fa "+el.icon aria-hidden="true")
			if (state.current_page != "edit_groups")
				+select_room_location(false)
			if (state.current_page == "edit_groups")
				button.btn.btn-danger.btn-lg.color2.ml.mt(data-toggle="tooltip" data-placement="bottom" title="добавить" onClick=utils.edit_band(state, utils.new_band(state)))
					span.myicon(class="fa fa-plus-square" aria-hidden="true")
			if (state.current_page == "week_template")
				button.btn.btn-danger.btn-lg.color2.ml.mt(data-toggle="tooltip" data-placement="bottom" title="добавить" onClick=utils.week_template_edit(state, utils.new_week_template(state)))
					span.myicon(class="fa fa-plus-square" aria-hidden="true")
			div.btn-group.ml.mt
				- var maybe_admin = state.response_state.admins.filter(function(el){return (el.login == state.request_template.login) && (el.password == state.request_template.password);})[0]
				- var this_admin_name = (maybe_admin ? maybe_admin.name : "anon")
				- var color = (state.ids.room ? "backgroundColor:"+state.response_state.rooms.filter(function(el){return el.id.toString() == state.ids.room.toString();})[0].color : "")
				span.btn.btn-default.btn-lg.bold(style=color)= this_admin_name
				button.btn.btn-primary.btn-lg(data-toggle="tooltip" data-placement="bottom" title="выйти" onClick=utils.logout(state))
					span.myicon(class="fa fa-sign-out" aria-hidden="true")
mixin calendar_main()
	div.container-fluid.mt
		div.row.text-center
			div.col-xs-12
				div(id="calendar")
mixin select_instruments_ids(location_id)
	select.selectpicker.form-control(multiple onChange=utils.multiple_select(state, ["new_session","instruments_ids"]) data-live-search="true")
		each el in state.response_state.instruments.filter(function(el){return el.location_id.toString() == location_id.toString();})
			if (state.new_session.instruments_ids.filter(function(id){return id.toString() == el.id.toString();}).length == 1)
				option(value=el.id selected)= el.name
			else
				option(value=el.id)= el.name
mixin session_exists()
	- var fields = ["id","room_id","instruments_ids","band_id","callback","status","price","amount","description"]
	each k in fields
		- var transl = state.verbose.session[k]
		div.col-xs-12.mt.input-group
			span.input-group-addon= transl
			if (k == "id")
				span.form-control= state.new_session.id.toString()
			else if (k == "room_id")
				+select_room_location(state.new_session.room_id)
			else if (k == "instruments_ids")
				+select_instruments_ids(state.rooms_of_locations[state.new_session.room_id])
			else if (k == "band_id")
				- var this_band = state.response_state.bands.filter(function(el){return el.id.toString() == state.new_session.band_id.toString();})[0]
				span.form-control= (this_band.name+" "+this_band.person+" "+this_band.contacts.phones.join(" "))
			else if (k == "callback")
				div.btn-default.form-control(onClick=utils.view_swap(state, ["new_session","callback"]))
					span.myicon(class=(state.new_session.callback ? "fa fa-check" : "fa fa-ban") aria-hidden="true")
			else if (k == "status")
				+selectitems(["SS_awaiting_first", "SS_closed_ok", "SS_canceled_soft", "SS_canceled_hard"], ["new_session","status"], state.verbose.session_status)
			else if (k == "price")
				input.form-control(type="number" onChange=utils.view_set(state, ["new_session","price"]) defaultValue=state.new_session.price.toString())
			else if (k == "amount")
				input.form-control(type="number" onChange=utils.view_set(state, ["new_session","amount"]) defaultValue=state.new_session.amount.toString())
			else if (k == "description")
				input.form-control(type="text" onChange=utils.view_set(state, ["new_session","description"]) defaultValue=utils.view_get(state, ["new_session","description"]))
mixin session_new()
	- var fields = ["room_id","instruments_ids","band_id","band_balance","band_description","callback","description"]
	- var this_band = (state.new_session.band_id ? state.response_state.bands.filter(function(el){return el.id.toString() == state.new_session.band_id.toString();})[0] : "не выбрана")
	each k in fields
		- var transl = state.verbose.session[k]
		div.col-xs-12.mt.input-group
			span.input-group-addon= transl
			if (k == "room_id")
				+select_room_location(state.ids.room)
			else if (k == "instruments_ids")
				+select_instruments_ids(state.ids.location)
			else if (k == "band_id")
				- var placeholder = (Imuta.is_map(this_band) ? (this_band.name+" "+this_band.person+" "+this_band.contacts.phones.join(" ")) : this_band)
				select.selectpicker.form-control(onChange=utils.view_set(state, ["new_session","band_id"]) data-live-search="true" title=placeholder)
					each el in state.response_state.bands
						option(value=el.id)= el.name+" "+el.person+" "+el.contacts.phones.join(" ")
				span.input-group-btn(data-toggle="tooltip" data-placement="bottom" title="новая" onClick=utils.new_group_from_session(state))
					button.btn.btn-danger.color2(type="button")
						span.myicon(class="fa fa-plus-square" aria-hidden="true")
			else if (k == "band_balance")
				span.form-control= (Imuta.is_map(this_band) ? this_band.balance.toString() : this_band)
			else if (k == "band_description")
				span.form-control= (Imuta.is_map(this_band) ? this_band.description : this_band)
			else if (k == "callback")
				div.btn-default.form-control(onClick=utils.view_swap(state, ["new_session","callback"]))
					span.myicon(class=(state.new_session.callback ? "fa fa-check" : "fa fa-ban") aria-hidden="true")
			else if (k == "description")
				input.form-control(type="text" onChange=utils.view_set(state, ["new_session","description"]) defaultValue=utils.view_get(state, ["new_session","description"]))
mixin workday_popup()
	if state.workday
		div.modal.fade(tabIndex="-1" id="calendarday")
			div.modal-dialog.modal-lg
				div.modal-content
					div.modal-header
						h4.modal-title= state.workday.locale('ru').format('dddd Do MMMM YYYY')
					div.modal-body
						div.container-fluid
							div.row.text-center
								div.col-xs-12.form-inline(id="datepair")
									input.form-control.date.start(type="text" placeholder="дата начала")
									input.form-control.time.start(type="text" placeholder="время начала")
									input.form-control.time.end(type="text" placeholder="время окончания")
									input.form-control.date.end(type="text" placeholder="дата окончания" disabled)
							if state.new_session
								div.row.text-center
									if state.new_session.id
										+session_exists()
									else
										+session_new()
					div.modal-footer
						div.text-center
							button.btn.btn-warning.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="закрыть" data-dismiss="modal")
								span.myicon(class="fa fa-times" aria-hidden="true")
							button.btn.btn-primary.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="сохранить" onClick=utils.session_new_edit(state))
								span.myicon(class="fa fa-floppy-o" aria-hidden="true")
							button.btn.btn-danger.btn-lg.ml.color2(data-toggle="tooltip" data-placement="bottom" title="встать на постоянку" onClick=utils.session_new_edit_template(state))
								span.myicon(class="fa fa-database" aria-hidden="true")
mixin groups_table()
	if state.response_state && (state.response_state.bands.length > 0)
		- var lst = state.response_state.bands
		- var keys = state.groups_header
		div.container-fluid.mt
			div.row
				div.col-xs-12
					table.table-special-sorted
						thead
							tr
								each k in keys
									th.text-center= k.transl
						tbody
							each el in lst
								tr(onClick=utils.edit_band(state, el))
									each k in keys
										if (k.key == "contacts")
											td.text-center 
												each sk in Object.keys(el[k.key])
													- var arr = el[k.key][sk]
													each str in arr
														span= str
														br
										else if (k.key == "kind")
											td.text-center= state.verbose.band_kind[el[k.key]]
										else if (k.key == "can_order")
											td.text-center= (el[k.key] ? "да" : "нет")
										else
											td.text-center= el[k.key].toString()
mixin group_popup()
	div.modal.fade(tabIndex="-1" id="group_popup")
		div.modal-dialog.modal-lg
			div.modal-content
				div.modal-body
					div.container-fluid
						div.row.text-center
							if state.new_band
								- var band = state.new_band
								- var headers = state.groups_header.filter(function(el){return (el.key != "balance") && (el.key != "contacts");})
								each k in headers
									- var this_path = ["new_band", k.key]
									- var defval = Imuta.access_in(state, this_path)
									div.col-xs-12.mt.input-group
										span.input-group-addon= k.transl
										if (k.key == "name")
											input.form-control(placeholder="имя группы" type="text" onChange=utils.view_set(state, this_path) defaultValue=band.name)
										else if (k.key == "person")
											input.form-control(placeholder="имя лица" type="text" onChange=utils.view_set(state, this_path) defaultValue=band.person)
										else if (k.key == "kind")
											- var kind = Imuta.get_in(state, this_path)
											- var title = (kind ? state.verbose.band_kind[kind] : "не выбрано")
											select.selectpicker.form-control(onChange=utils.view_set(state, this_path) title=title)
												each bk in ["BK_base","BK_cover","BK_education"]
													option(value=bk)= state.verbose.band_kind[bk]
										else if (k.key == "description")
											input.form-control(placeholder="" type="text" onChange=utils.view_set(state, this_path) defaultValue=defval)
										else if (k.key == "can_order")
											div.btn-default.form-control(onClick=utils.view_swap(state, this_path))
												span.myicon(class=(Imuta.get_in(state, this_path) ? "fa fa-check" : "fa fa-ban") aria-hidden="true")
								div.col-xs-12.mt.input-group
									span.form-control.btn.disabled= "контакты"
								each k in Object.keys(state.new_band.contacts)
									- var placeholder = ((k == "phones") ? "8xxxxxxxxxx" : "")
									div.col-xs-12.mt.input-group.text-left
										span.input-group-addon= state.verbose.contacts[k]
										input.form-control(id="contacts-list-"+k type="text" data-role="tagsinput" defaultValue=state.new_band.contacts[k].join(",") placeholder=placeholder)
				div.modal-footer
					div.text-center
						button.btn.btn-warning.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="закрыть" data-dismiss="modal")
							span.myicon(class="fa fa-times" aria-hidden="true")
						button.btn.btn-primary.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="сохранить" onClick=utils.band_new_edit(state))
							span.myicon(class="fa fa-floppy-o" aria-hidden="true")
mixin week_template_table()
	if state.response_state && (state.response_state.sessions_template.length > 0)
		- var lst = state.response_state.sessions_template
		- var keys = Object.keys(state.verbose.session_template_header)
		div.container-fluid.mt
			div.row
				div.col-xs-12
					table.table-special-sorted
						thead
							tr
								each k in keys
									th.text-center= state.verbose.session_template_header[k]
						tbody
							each el in lst
								tr(onClick=utils.week_template_edit(state, el))
									each k in keys
										- var data = el[k]
										if (k == "week_day")
											td.text-center= state.verbose.week_days[data]
										else if (k == "room_id")
											- var color = state.response_state.rooms.filter(function(el){return el.id.toString() == data.toString();})[0].color
											td.text-center(style="backgroundColor:"+color)
												span= state.dicts.locations[state.rooms_of_locations[data]]
												br
												span= state.dicts.rooms[data]
										else if (k == "instruments_ids")
											td.text-center 
												each id in data
													span= state.dicts.instruments[id]
													br
										else if (k == "band_id")
											td.text-center
												span= state.dicts.bands[data].name
												br
												span= state.dicts.bands[data].person
										else if (k == "min_from") || (k == "min_to")
											td.text-center= utils.minutes2moment(data).format('HH:mm')
										else
											td.text-center= data.toString()
mixin week_template_popup()
	div.modal.fade(tabIndex="-1" id="week_template_popup")
		div.modal-dialog.modal-lg
			div.modal-content
				div.modal-body
					div.container-fluid
						div.row.text-center
							if state.new_week_template
								- var keys = Object.keys(state.verbose.session_template_header).filter(function(k){return ((k != "min_from") && (k != "min_to"));})
								- var location_id = state.rooms_of_locations[state.new_week_template.room_id].toString()
								div.col-xs-12.form-inline.mb(id="datepair")
									input.form-control.date.start.hidden(type="text" placeholder="дата начала")
									input.form-control.time.start(type="text" placeholder="время начала")
									input.form-control.time.end(type="text" placeholder="время окончания")
									input.form-control.date.end.hidden(type="text" placeholder="дата окончания" disabled)
								each k in keys
									- var this_path = ["new_week_template", k]
									- var this_data = Imuta.access_in(state, this_path)
									div.col-xs-12.mt.input-group
										span.input-group-addon= state.verbose.session_template_header[k]
										if (k == "week_day")
											+selectitems(["WD_1","WD_2","WD_3","WD_4","WD_5","WD_6","WD_7"], this_path, state.verbose.week_days)
										else if (k == "room_id")
											- var room_ids = state.response_state.rooms.filter(function(el){return el.location_id.compare(location_id) == 0;}).map(function(el){return el.id;})
											+selectitems(room_ids, this_path, state.dicts.rooms)
										else if (k == "instruments_ids")
											- var instruments_ids = state.response_state.instruments.filter(function(el){return el.location_id.compare(location_id) == 0;}).map(function(el){return el.id;})
											+selectitems_multiple(instruments_ids, this_path, state.dicts.instruments)
										else if (k == "band_id")
											- var this_band = (this_data ? state.response_state.bands.filter(function(el){return el.id.toString() == this_data.toString();})[0] : "не выбрана")
											- var placeholder = (Imuta.is_map(this_band) ? (this_band.name+" "+this_band.person+" "+this_band.contacts.phones.join(" ")) : this_band)
											select.selectpicker.form-control(onChange=utils.view_set(state, this_path) data-live-search="true" title=placeholder)
												each el in state.response_state.bands
													option(value=el.id)= el.name+" "+el.person+" "+el.contacts.phones.join(" ")
										else if (k == "description")
											input.form-control(placeholder="" type="text" onChange=utils.view_set(state, this_path) defaultValue=this_data)
										else
											span.form-control= this_data.toString()
				div.modal-footer
					div.text-center
						button.btn.btn-warning.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="закрыть" data-dismiss="modal")
							span.myicon(class="fa fa-times" aria-hidden="true")
						button.btn.btn-primary.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="сохранить" onClick=utils.week_template_new_edit(state))
							span.myicon(class="fa fa-floppy-o" aria-hidden="true")
						if state.new_week_template && state.new_week_template.id
							button.btn.btn-danger.btn-lg.ml(data-toggle="tooltip" data-placement="bottom" title="удалить" onClick=utils.week_template_disable(state))
								span.myicon(class="fa fa-trash" aria-hidden="true")
mixin statistics_component()
	div.container-fluid.mt
		div.row.text-center
			div.col-xs-12.form-inline(id="datepair")
				input.form-control.date.start(type="text" placeholder="дата начала")
				input.form-control.time.start.hidden(type="text" placeholder="время начала")
				input.form-control.time.end.hidden(type="text" placeholder="время окончания")
				input.form-control.date.end(type="text" placeholder="дата окончания")
				button.btn.btn-primary.ml(data-toggle="tooltip" data-placement="bottom" title="выгрузить" onClick=utils.statistics_request(state))
					span.myicon(class="fa fa-search" aria-hidden="true")
				
//
//	PAGE CONTENT
//
if state.response_state
	+navbar
	if state.current_page == "calendar_main"
		+calendar_main()
		+workday_popup()
	else if (state.current_page == "edit_groups")
		+groups_table()
		+group_popup()
	else if (state.current_page == "week_template")
		+week_template_table()
		+week_template_popup()
	else if (state.current_page == "statistics")
		+statistics_component()
else
	+auth
